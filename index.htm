<html>

<head>

<script>
Array.prototype.trail = function(fnc) {
	for (var i = 1; i < this.length; ++i)
		fnc(this[i - 1], this[i], i - 1);
}
var dist = (a, b) => Math.sqrt(Math.pow((a.x - b.x), 2) - Math.pow((a.y - b.y), 2));

var gravAcc = -25;
var interval = 5;
var pends = [{x:350,y:-50}, {x:500,y:-50}, {x:600,y:-25}, {x:500,y:-100}]
var mobileNgVelocity = [];
var mobileTangVelocity = [];
var alpha = [];

var circleRadius = [];
pends.trail(function(trail, current) {
	circleRadius.push(dist(trail, current))
	alpha.push(0);mobileNgVelocity.push(0);mobileTangVelocity.push(0);
})

function render() {

    ctx.clearRect(0, 0, canv.width, canv.height);
    // Render fixed point
    ctx.beginPath();
    ctx.fillStyle = "black";
    ctx.arc(pends[0].x, -pends[0].y, 10, 0, 2*Math.PI);
    ctx.stroke();
    ctx.fill();
	
	pends.trail(function(trail, current) {
		ctx.moveTo(trail.x, -trail.y);
		ctx.lineTo(current.x, -current.y);
		ctx.stroke();

		ctx.arc(current.x, -current.y, 5, 0, 2*Math.PI);
		ctx.fill();
	});
}

function move() {
    render();
	for (var i = 1; i < pends.length; ++i) {
		var tangAcc = gravAcc * Math.cos(alpha[i - 1]);
		mobileTangVelocity[i - 1] += interval / 1000 * tangAcc;
		mobileNgVelocity[i - 1] = mobileTangVelocity[i - 1] / circleRadius[i - 1];

		pends[i].x = pends[i - 1].x + circleRadius[i - 1] * Math.cos(mobileNgVelocity[i - 1] + alpha[i - 1]);
		pends[i].y = pends[i - 1].y + circleRadius[i - 1] * Math.sin(mobileNgVelocity[i - 1] + alpha[i - 1]);
		alpha[i - 1] += mobileNgVelocity[i - 1];
		// FRICTION
		mobileTangVelocity[i - 1] /= 1.0004;
	}
}

function domLoaded() {
    canv = document.getElementById("pendulum");
    ctx = canv.getContext("2d");

    setInterval(move, interval);
}
</script>

</head>
<body>
    <canvas id="pendulum" width="900px" height="600px" style="border:solid thin">
    </canvas>
</body>

<script>
domLoaded();
</script>
</html>